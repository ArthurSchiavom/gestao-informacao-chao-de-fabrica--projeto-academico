
Entrega ------------------------------------------------------------------------------------------

TEMOS QUE TER UM DIAGRAMA DE GANTT EM TODAS AS APRESENTAÇÕES
Relatório inclui competências desenvolvidas.




Design/Implementação ------------------------------------------------------------------------------------------

requisitos - não devem repetir o caso de uso descrito no caderno de encargos, nem devem inventar o texto de caso de uso. devem indicar aqui a informação adicional que obtiveram do cliente sobre esse requisito. se conversaram com o cliente e elaboraram com o cliente o caso de uso, aí sim, deverão colocar o caso de uso nesta secção.

análise - SSD + descrição. nesta secção importa essencialmente indicar se o modelo de dominio dá ou não respotsa ao requisito do caso de uso ou se há necessidade de estender o modelo de dominio 

design - SD + CD + descrição dos testes. Um caso de uso "Listagem de X" será praticamente igual a todos os outros casos de uso "Listagem ...", pelo que não faz sentido repetir em cada um um diagrama de sequencia, diagrama de classes, etc. É preferivel que tenham uma area global onde descrevem genericamente os casos de uso de listagem e em cada user story concreta apenas indiquem as especificidades desse caso de uso se existirem. devem indicar que testes unitários estão pensados que capturem os requisitos e invariantes de negócio. Testes planeiam-se antes da implementação.

implementação - apenas colocar detalhes que mereçam destaque. não coisas corriqueiras sobre a implementação. assumam que quem lê o vosso código sabe programar por isso apenas devemos explicar as decisões de implementação que sejam menos obvias

integração - provavelmente haverá depências entre esta user story e as classes de dominio e outras user stories. devem aqui indicar como é que essas dependências foram mitigadas. especial atenção nos casos em que se dependa de outros subsistemas ou de aplicações externas.




Use cases ------------------------------------------------------------------------------------------

No caso da Ordem de Produção, o enunciado refere que nem todas as máquinas poderão conseguir identificar a ordem, e que nesse caso teriam de deduzir a partir de mensagens de outras máquinas. A primeira máquina consegue sempre identificar a ordem.

No caso da Linha de Produção, o enunciado refere que essa informação estará sempre no sistema. Nenhuma mensagem gerada pela máquina conterá inicialmente a informação sobre a linha de produção, e é sempre adicionada durante o processamento desta.




Documentação e trabalho em grupo ------------------------------------------------------------------------------------------

Preparação:
 * identificar bem o trabalho necessário para o sprint, ex., as user stories que o cliente espera receber, mas também outras tarefas necessárias que não estejam explicitas nas user stories. Por exemplo, neste sprint é necessário fazer setup da wiki. não consta como user story mas é uma das tarefas necessárias a equipa fazer e por isso deve ser contabilizada
 * criar issues correspondentes a cada tarefa da equipa
 * identificar dependências entre tarefas e decidir como mitigar essa dependência. exemplo, decidir o nome das classes que necessitam partilhar entre user stories e fazer um commit inicial apenas com o esqueleto dessa classe

Em relação aos issues:
 * deve atribuir o issue a quem o vai executar 
 * ir alterando o estado do issue ao longo do progresso da sua execução
 * referenciar os issues nos vossos commits

Em relação à wiki:
 * Podem tratar a wiki como um repositório GIT e fazer commits referenciando os issues
 * coloquem na wiki as regras gerais da vossa arquitectura, ex., nomenclatura de classes

Em relação ao código fonte e ao projeto:
 * O protejo no repositório GIT deve sempre estar num estado estável, ou seja, em qq momento que se faça pull deve ser possível compilar sem erros e executar todos os testes automáticos a passar
 * Não devem deixar passar muito tempo sem fazerem pull/push do vosso repositório local para diminuir as probabilidades de erros de integração. aconselha-se a haver commits frequentes, no mínimo, diários
 * Utilizem ao máximo as ferramentas de "static code analisis" que o vosso IDE vos der e/ou sonar
 
Base de dados:
 * Ter sempre um script or ferramenta que carregue todas as informações da base de dados necessárias para a apresentação de todas as funcionalidades já implementadas.